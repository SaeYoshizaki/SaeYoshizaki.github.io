---
interface Props {
  category: string;
}
const { category } = Astro.props;
---
<div class="carousel">
<figure>
  <img src={`/${category}/picture1.jpg`} alt="" />
  <img src={`/${category}/picture2.jpg`} alt="" />
  <img src={`/${category}/picture3.jpg`} alt="" />
  <img src={`/${category}/picture4.jpg`} alt="" />
  <img src={`/${category}/picture5.jpg`} alt="" />
  <figure>
  </div>
  <script>
    const carousel = document.querySelector('.carousel figure');
    let currentAngle = 0;
    const rotationStep = 72;
    const totalImages = 5;

    document.addEventListener('click', (e) => {
      const viewportWidth = window.innerWidth;

      if (e.clientX < viewportWidth / 2) {
        // 画面の左半分をクリックしたとき
        currentAngle += rotationStep; // 左に回転
      } else {
        // 画面の右半分をクリックしたとき
        currentAngle -= rotationStep; // 右に回転
      }

      // 回転を適用し、連続してクリックしても続けて回転するようにする
      carousel.style.transform = `rotateY(${currentAngle}deg)`;
    });
  </script>

  <style>
    .carousel {
  padding: 20px;
  perspective: 500px;
  overflow: hidden;

  display: flex;
  flex-direction: column;
  align-items: center;
}

.carousel > * {
  flex: 0 0 auto;
}

.carousel figure {
  margin: 0;
  width: 400px; 
  transform-style: preserve-3d;
  transition: transform 0.5s;
  transform-origin: 50% 50% -482.84px;
}

.carousel img {
  width: 100%;
  box-sizing: border-box;
  padding: 0 40px; 
  opacity: 0.9; 
}

.carousel img:not(:first-of-type) {
  position: absolute;
  left: 0;
  top: 0;
  transform-origin: 50% 50% -482.84px;
}


/* Rotating images based on their positions */
.carousel img:nth-child(2) {
  transform: rotateY(1.256rad); 
}

.carousel img:nth-child(3) {
  transform: rotateY(2.512rad); 
}

.carousel img:nth-child(4) {
  transform: rotateY(3.768rad); 
}

.carousel img:nth-child(5) {
  transform: rotateY(5.024rad); 
}
  </style>

  